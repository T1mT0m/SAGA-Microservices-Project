package com.github.bwar.sb.ms.saga.aggregate;

import org.axonframework.modelling.command.AggregateIdentifier;
import org.axonframework.modelling.command.AggregateLifecycle;
import org.axonframework.spring.stereotype.Aggregate;

import com.github.bwar.sb.ms.saga.command.api.command.CreateOrderCommand;
import com.github.bwar.sb.ms.saga.events.OrderCreatedEvent;

@Aggregate
public class OrderAggregate {
	
	@AggregateIdentifier
	private String orderId;
	private String productId;
	private String userId;
	private String addressId;
	private Integer quantity;
	private String orderStatus;
	
	public OrderAggregate() {}
	
	public OrderAggregate(CreateOrderCommand createOrderCommand) {
		OrderCreatedEvent orderCreatedEvent = OrderCreatedEvent.builder()
				.orderId(createOrderCommand.getOrderId())
				.productId(createOrderCommand.getProductId())
				.userId(createOrderCommand.getUserId())
				.addressId(createOrderCommand.getAddressId())
				.quantity(createOrderCommand.getQuantity())
				.orderStatus(createOrderCommand.getOrderStatus())
				.build();
		
		AggregateLifecycle.apply(orderCreatedEvent);
		
	}
	


}
